<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="stu.ovs.dao.persistence.CoursesDao">

	<resultMap id="BaseResultMap" type="stu.ovs.dao.entity.Courses">
		<id column="id" property="id" jdbcType="BIGINT" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="img" property="img" jdbcType="VARCHAR" />
        <result column="attention" property="attention" jdbcType="BIGINT" />
        <result column="collect" property="collect" jdbcType="BIGINT" />
        <result column="disagree" property="disagree" jdbcType="BIGINT" />
        <result column="agree" property="agree" jdbcType="BIGINT" />
	</resultMap>

    <select id="findById" parameterType="int" resultMap="BaseResultMap">
        SELECT * FROM courses c WHERE c.id = #{id}
    </select>

    <select id="findCourses" parameterType="int" resultMap="BaseResultMap">
        SELECT c.* FROM courses c RIGHT JOIN courses_index ci ON ci.courses_id = c.id WHERE ci.contents_id = #{id}
    </select>

    <select id="findByContents" parameterType="int" resultMap="BaseResultMap">
        SELECT * FROM courses c WHERE c.id IN (SELECT courses_id FROM courses_index WHERE contents_id = #{id})
    </select>

    <select id="findByCategory" parameterType="int" resultMap="BaseResultMap">
        SELECT * FROM courses c WHERE c.contents_id = #{id}
    </select>

    <select id="findAll" resultMap="BaseResultMap">
        SELECT * FROM courses
    </select>

    <insert id="save" parameterType="stu.ovs.dao.entity.Courses" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO courses(name, description, img, contents_id, attention, collect)
        VALUE (#{name}, #{description}, #{img}, #{ contents_id}, #{attention}, #{collect});
    </insert>

    <insert id="addCoursesIndex" parameterType="map" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO courses_index(courses_id, contents_id)
        VALUE (#{coursesId}, #{contentsId});
    </insert>

    <delete id="delete" parameterType="string">
        DELETE FROM courses u WHERE u.id = #{id}
    </delete>

    <update id="update" parameterType="stu.ovs.dao.entity.Courses">
        UPDATE courses SET name = #{name}, description = #{description}, img = #{img}, attention = #{attention}, collect = #{collect}
    </update>

</mapper>
